name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.2.0)'
        required: true
        type: string
      prerelease:
        description: 'Pre-release'
        required: false
        type: boolean
        default: false

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Validate version
      run: |
        if [[ ! "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "‚ùå Version must be in format X.Y.Z"
          exit 1
        fi
        echo "‚úÖ Version format is valid"
        
    - name: Update version in config.json
      run: |
        # Update version in config.json
        sed -i 's/"version": "[^"]*"/"version": "${{ github.event.inputs.version }}"/' config.json
        
        # Check if there are any changes
        if git diff --quiet config.json; then
          echo "‚ö†Ô∏è  Version is already ${{ github.event.inputs.version }} in config.json"
          echo "version_changed=false" >> $GITHUB_ENV
        else
          echo "‚úÖ Updated version to ${{ github.event.inputs.version }}"
          echo "version_changed=true" >> $GITHUB_ENV
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add config.json
          git commit -m "chore: bump version to ${{ github.event.inputs.version }}"
        fi
        
    - name: Generate changelog
      id: changelog
      run: |
        # Get the last tag
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        
        if [ -z "$LAST_TAG" ]; then
          echo "## üéâ Initial Release" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "This is the first release of the Solarmax to MQTT Agent with Home Assistant integration." >> CHANGELOG.md
        else
          echo "## üöÄ What's Changed" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          
          # Generate changelog from commit messages
          git log --pretty=format:"- %s" $LAST_TAG..HEAD >> CHANGELOG.md
          
          # Add contributors
          echo "" >> CHANGELOG.md
          echo "## üë• Contributors" >> CHANGELOG.md
          git log --pretty=format:"- @%an" $LAST_TAG..HEAD | sort | uniq >> CHANGELOG.md
        fi
        
        echo "## üì¶ Docker Images" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "- \`ghcr.io/${{ github.repository }}:${{ github.event.inputs.version }}\`" >> CHANGELOG.md
        echo "- \`ghcr.io/${{ github.repository }}:latest\`" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## üè† Home Assistant Addon" >> CHANGELOG.md
        echo "Available in the addon repository after this release." >> CHANGELOG.md
        
    - name: Create and push tag
      run: |
        # Check if tag already exists
        if git rev-parse "v${{ github.event.inputs.version }}" >/dev/null 2>&1; then
          echo "‚ùå Tag v${{ github.event.inputs.version }} already exists"
          exit 1
        fi
        
        git tag "v${{ github.event.inputs.version }}"
        git push origin "v${{ github.event.inputs.version }}"
        
        # Only push master if there were version changes
        if [ "${{ env.version_changed }}" = "true" ]; then
          git push origin master
        fi
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v${{ github.event.inputs.version }}"
        name: "Release v${{ github.event.inputs.version }}"
        body_path: CHANGELOG.md
        draft: false
        prerelease: ${{ github.event.inputs.prerelease }}
        
    - name: Trigger addon repository update
      if: "!github.event.inputs.prerelease"
      run: |
        # This will trigger the main build workflow which will update the addon repo
        echo "üöÄ Release created, addon repository will be updated automatically"
